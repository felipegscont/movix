version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: movix_postgres_dev
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-movix_nfe}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-movix_nfe}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - movix_network

  # DbGate - Database Administration Tool
  dbgate:
    image: dbgate/dbgate:latest
    container_name: movix_dbgate_dev
    restart: unless-stopped
    ports:
      - "3001:3000"  # Mudei para 3001 para não conflitar com o NestJS
    environment:
      CONNECTIONS: con1
      LABEL_con1: Movix PostgreSQL
      SERVER_con1: postgres
      USER_con1: ${POSTGRES_USER:-postgres}
      PASSWORD_con1: ${POSTGRES_PASSWORD:-postgres}
      PORT_con1: 5432
      ENGINE_con1: postgres@dbgate-plugin-postgres
      DATABASE_con1: ${POSTGRES_DB:-movix_nfe}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - movix_network

  # Redis (para cache e sessões futuras)
  redis:
    image: redis:7-alpine
    container_name: movix_redis_dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - movix_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  movix_network:
    driver: bridge
